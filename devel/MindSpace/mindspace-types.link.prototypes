/** \file mindspace-types.link.prototypes - Generated from MindSpace.types by mindspace-types.pl on Wed Feb  8 18:48:12 EST 2012  **/

/** Shared reference to special link type KLineLink */
static const MLinkType & KLineLink();
/** Shared reference to special link type ConceptuallyRelatedTo */
static const MLinkType & ConceptuallyRelatedTo();
/** Shared reference to special link type ThematicKLine */
static const MLinkType & ThematicKLine();
/** Shared reference to special link type SuperThematicKLine */
static const MLinkType & SuperThematicKLine();
/** Shared reference to special link type ThingLink */
static const MLinkType & ThingLink();
/** Shared reference to special link type IsA */
static const MLinkType & IsA();
/** Shared reference to special link type PartOf */
static const MLinkType & PartOf();
/** Shared reference to special link type PropertyOf */
static const MLinkType & PropertyOf();
/** Shared reference to special link type DefinedAs */
static const MLinkType & DefinedAs();
/** Shared reference to special link type MadeOf */
static const MLinkType & MadeOf();
/** Shared reference to special link type SpatialLink */
static const MLinkType & SpatialLink();
/** Shared reference to special link type LocationOf */
static const MLinkType & LocationOf();
/** Shared reference to special link type EventLink */
static const MLinkType & EventLink();
/** Shared reference to special link type SubeventOf */
static const MLinkType & SubeventOf();
/** Shared reference to special link type PrerequisiteEventOf */
static const MLinkType & PrerequisiteEventOf();
/** Shared reference to special link type FirstSubeventOf */
static const MLinkType & FirstSubeventOf();
/** Shared reference to special link type LastSubeventOf */
static const MLinkType & LastSubeventOf();
/** Shared reference to special link type CausalLink */
static const MLinkType & CausalLink();
/** Shared reference to special link type EffectOf */
static const MLinkType & EffectOf();
/** Shared reference to special link type DesirousEffectOf */
static const MLinkType & DesirousEffectOf();
/** Shared reference to special link type AffectiveLink */
static const MLinkType & AffectiveLink();
/** Shared reference to special link type MotivationOf */
static const MLinkType & MotivationOf();
/** Shared reference to special link type DesireOf */
static const MLinkType & DesireOf();
/** Shared reference to special link type FunctionalLink */
static const MLinkType & FunctionalLink();
/** Shared reference to special link type CapableOfReceivingAction */
static const MLinkType & CapableOfReceivingAction();
/** Shared reference to special link type UsedFor */
static const MLinkType & UsedFor();
/** Shared reference to special link type AgentLink */
static const MLinkType & AgentLink();
/** Shared reference to special link type CapableOf */
static const MLinkType & CapableOf();
/** Shared reference to special link type GoalVariableLink */
static const MLinkType & GoalVariableLink();
/** Shared reference to special link type MemoryLink */
static const MLinkType & MemoryLink();
/** Shared reference to special link type PartOfLink */
static const MLinkType & PartOfLink();
/** Shared reference to special link type InheritsFromLink */
static const MLinkType & InheritsFromLink();
/** Shared reference to special link type PredicateSubjectLink */
static const MLinkType & PredicateSubjectLink();
/** Shared reference to special link type PredicateObjectLink */
static const MLinkType & PredicateObjectLink();
/** Shared reference to special link type PredicateLink */
static const MLinkType & PredicateLink();
/** Shared reference to special link type ProcedureImplementationLink */
static const MLinkType & ProcedureImplementationLink();
/** Shared reference to special link type UnorderedLink */
static const MLinkType & UnorderedLink();
/** Shared reference to special link type OrderedLink */
static const MLinkType & OrderedLink();
/** Shared reference to special link type SetLink */
static const MLinkType & SetLink();
/** Shared reference to special link type ListLink */
static const MLinkType & ListLink();
/** Shared reference to special link type MemberLink */
static const MLinkType & MemberLink();
/** Shared reference to special link type SubsetLink */
static const MLinkType & SubsetLink();
/** Shared reference to special link type AndLink */
static const MLinkType & AndLink();
/** Shared reference to special link type OrLink */
static const MLinkType & OrLink();
/** Shared reference to special link type NotLink */
static const MLinkType & NotLink();
/** Shared reference to special link type FalseLink */
static const MLinkType & FalseLink();
/** Shared reference to special link type TrueLink */
static const MLinkType & TrueLink();
/** Shared reference to special link type ContextLink */
static const MLinkType & ContextLink();
/** Shared reference to special link type TypedVariableLink */
static const MLinkType & TypedVariableLink();
/** Shared reference to special link type BindLink */
static const MLinkType & BindLink();
/** Shared reference to special link type ForAllLink */
static const MLinkType & ForAllLink();
/** Shared reference to special link type ExistLink */
static const MLinkType & ExistLink();
/** Shared reference to special link type AverageLink */
static const MLinkType & AverageLink();
/** Shared reference to special link type ScholemLink */
static const MLinkType & ScholemLink();
/** Shared reference to special link type ImplicationLink */
static const MLinkType & ImplicationLink();
/** Shared reference to special link type EvaluationLink */
static const MLinkType & EvaluationLink();
/** Shared reference to special link type VisionSensor */
static const MLinkType & VisionSensor();
/** Shared reference to special link type LocationSensor */
static const MLinkType & LocationSensor();
/** Shared reference to special link type TextInputSensor */
static const MLinkType & TextInputSensor();
/** Shared reference to special link type ANSITextSensor */
static const MLinkType & ANSITextSensor();
/** Shared reference to special link type SimpleXYLocationSensor */
static const MLinkType & SimpleXYLocationSensor();
/** Shared reference to special link type MovementOutput */
static const MLinkType & MovementOutput();
/** Shared reference to special link type TextOutput */
static const MLinkType & TextOutput();
/** Shared reference to special link type SimpleXYOutput */
static const MLinkType & SimpleXYOutput();
/** Shared reference to special link type ANSITextOutput */
static const MLinkType & ANSITextOutput();
/** Shared reference to special link type ActionLink */
static const MLinkType & ActionLink();
